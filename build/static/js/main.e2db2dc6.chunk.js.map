{"version":3,"sources":["components/BeerCard/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","reportWebVitals.js","index.js"],"names":["BeerCard","props","className","onClick","clickedBeer","id","alt","name","src","image","style","notes","Wrapper","children","Header","title","currentScore","highScore","shuffle","array","i","length","j","Math","floor","random","App","state","beers","shuffleArray","setState","gameReset","handleIncrement","indexOf","push","console","log","this","map","beer","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"k/DA0BeA,MAvBf,SAAkBC,GAChB,OACE,sBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,YAAYH,EAAMI,KAA7D,UACE,qBAAKH,UAAU,gBAAf,SACE,qBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,UAEnC,qBAAKP,UAAU,UAAf,SACE,+BACE,+BACE,2CADF,IAC0BD,EAAMM,QAEhC,+BACE,4CADF,IAC2BN,EAAMS,SAEjC,+BACE,4CADF,IAC2BT,EAAMU,kB,MCT5BC,MANf,SAAiBX,GACb,OAAO,qBAAKC,UAAU,UAAf,SACFD,EAAMY,Y,MCaAC,MAff,SAAgBb,GACd,OAAO,sBAAKC,UAAU,SAAf,UACH,qBAAKA,UAAU,QAAf,SACI,2CAEJ,qBAAKA,UAAU,OAAf,SACE,6BAAKD,EAAMc,UAEb,sBAAKb,UAAU,UAAf,UACE,gDAAmBD,EAAMe,gBACzB,6CAAgBf,EAAMgB,oB,OCN9B,SAASC,EAAQC,GACf,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADH,EAEhB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFgC,KAE5BD,EAAMG,GAFsB,KAI3C,OAAOH,E,IAGHO,E,4MAEJC,MAAQ,CACNC,QACAb,MAAO,6BACPC,aAAc,EACdC,UAAW,EACXb,YAAa,I,EAIdyB,aAAe,WACd,EAAKC,SAAS,CAAEF,MAAOV,EAAQU,M,EAIhCG,UAAY,WACX,EAAKD,SAAS,CACZf,MAAO,mBACPC,aAAc,EACdC,UAAW,EAAKU,MAAMV,UACtBb,YAAa,KAEf,EAAKyB,gB,EAIPG,gBAAkB,WAChB,EAAKF,SAAS,CACVd,aAAc,EAAKW,MAAMX,aAAe,EACxCD,MAAO,kB,EAQbX,YAAc,SAAAC,GAEZ,IAAID,EAAc,EAAKuB,MAAMvB,YACzBY,EAAe,EAAKW,MAAMX,aAC1BC,EAAY,EAAKU,MAAMV,WAGM,IAA7Bb,EAAY6B,QAAQ5B,IAEtBD,EAAY8B,KAAK7B,GACjB8B,QAAQC,IAAIhC,GACZ,EAAK4B,kBACL,EAAKH,gBAI8B,KAA5B,EAAKF,MAAMX,aAElB,EAAKc,SAAS,CACZd,aAAc,EACdZ,YAAa,GACbW,MAAO,cAKPoB,QAAQC,IAAI,cACb,EAAKL,aAGJf,EAAeC,GACjB,EAAKa,SAAS,CACZb,UAAWD,K,4CASjB,WAAU,IAAD,OACP,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACAD,MAAOsB,KAAKV,MAAMZ,MAClBC,aAAcqB,KAAKV,MAAMX,aACzBC,UAAWoB,KAAKV,MAAMV,YAErBoB,KAAKV,MAAMC,MAAMU,KAAI,SAAAC,GAAI,OACxB,cAAC,EAAD,CACEnC,YAAa,EAAKA,YAClBC,GAAIkC,EAAKlC,GAETE,KAAMgC,EAAKhC,KACXE,MAAO8B,EAAK9B,MACZC,MAAO6B,EAAK7B,MACZC,MAAO4B,EAAK5B,OAJP4B,EAAKlC,c,GA3FJmC,aAuGHd,IC1GAe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e2db2dc6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction BeerCard(props) {\n  return (\n    <div className=\"card\" onClick={() => props.clickedBeer(props.id)}>\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Style:</strong> {props.style}\n          </li>\n          <li>\n            <strong>Notes:</strong> {props.notes}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default BeerCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n    return <div className=\"wrapper\">\n        {props.children}\n    </div>;\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n  return <div className=\"header\">\n      <div className=\"title\">\n          <p>mmm beer</p>\n      </div>\n      <div className=\"info\">\n        <h3>{props.title}</h3>\n      </div>\n      <div className=\"counter\">\n        <p>Current Score: {props.currentScore}</p>\n        <p>High Score: {props.highScore}</p>\n      </div>\n  </div>;\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport BeerCard from \"./components/BeerCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport beers from \"./beers.json\";\n\n// function to shuffle and return array\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nclass App extends Component {\n  // Setting state to beers.json and other global variables\n  state = {\n    beers,\n    title: \"Click any beer you'd like!\",\n    currentScore: 0,\n    highScore: 0,\n    clickedBeer: []\n  };\n\n   //shuffle the list on each click\n   shuffleArray = () => {\n    this.setState({ beers: shuffle(beers) });\n  };\n\n   // handles game reset\n   gameReset = () => {\n    this.setState({\n      title: \"Oops, try again.\",\n      currentScore: 0,\n      highScore: this.state.highScore,\n      clickedBeer: []\n    });\n    this.shuffleArray();\n  }\n\n  // increases the state.score to +1\n  handleIncrement = () => {\n    this.setState({\n        currentScore: this.state.currentScore + 1,\n        title: 'Keep Moving!'\n    });\n  };\n\n \n\n\n    // function to handle user clicks\n  clickedBeer = id => {\n    // assigning the states for later updating\n    let clickedBeer = this.state.clickedBeer;\n    let currentScore = this.state.currentScore;\n    let highScore = this.state.highScore;\n\n    // if the clicked image has an id of the indexed beers\n    if (clickedBeer.indexOf(id) === -1) {\n      // push that id into that id into the array to be stored\n      clickedBeer.push(id);\n      console.log(clickedBeer);\n      this.handleIncrement();\n      this.shuffleArray();\n    } \n    \n    // if the score reaches 15 it will add to high score\n    else if (this.state.currentScore === 15) {\n      // alert player wins\n      this.setState({\n        currentScore: 0,\n        clickedBeer: [],\n        title: \"You win!\"\n      });\n    } \n    \n    else {\n        console.log(\"game reset\")\n       this.gameReset();\n    }\n\n    if (currentScore > highScore) {\n      this.setState({\n        highScore: currentScore\n      });\n    }\n  };\n\n   \n\n \n\n  render() {\n    return (\n      <Wrapper>\n        <Header\n        title={this.state.title}\n        currentScore={this.state.currentScore}\n        highScore={this.state.highScore}\n        />\n        {this.state.beers.map(beer => (\n          <BeerCard\n            clickedBeer={this.clickedBeer}\n            id={beer.id}\n            key={beer.id}\n            name={beer.name}\n            image={beer.image}\n            style={beer.style}\n            notes={beer.notes}\n          />\n        ))}\n      </Wrapper>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}