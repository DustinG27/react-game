{"ast":null,"code":"var _jsxFileName = \"/Users/dusting27/Desktop/react-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport BeerCard from \"./components/BeerCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport beers from \"./beers.json\"; // function to shuffle and return array\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array;\n}\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      beers,\n      title: \"Click any beer you'd like!\",\n      currentScore: 0,\n      highScore: 0,\n      clickedBeer: []\n    };\n\n    this.clickedBeer = id => {\n      // tests if click function is connected\n      // console.log(id)\n      // setting open variables for manipulation\n      let clickedBeer = this.state.clickedBeer;\n      let currentScore = this.state.currentScore;\n      let highScore = this.state.highScore; // if statement will push id's into an array then check for multiples\n      // the array then resets\n\n      if (clickedBeer.indexOf(id) === -1) {\n        // pushes selected id's into the clickedBeer array\n        clickedBeer.push(id);\n        console.log(clickedBeer); // on success add 1 to current score\n\n        this.handleIncrement(); // this.shuffleArray();\n        // testing the greater than sign. the score doesn't reset with === 15\n      } else if (this.state.currentScore === 14) {\n        this.setState({\n          currentScore: 0,\n          highScore: this.state.highScore + 1,\n          clickedBeer: []\n        });\n      } else {\n        this.setState({\n          score: 0,\n          clickedBeer: []\n        });\n\n        if (currentScore > highScore) {\n          this.setState({\n            topScore: currentScore\n          });\n        }\n      }\n\n      ;\n    };\n\n    this.handleIncrement = () => {\n      const newScore = this.setState({\n        currentScore: this.state.currentScore + 1\n      }); // this.setState({\n      //   currentScore: newScore,\n      //   title: \"Keep on clickin'!\"\n      // })\n    };\n\n    this.shuffleArray = () => {\n      this.setState({\n        beers: shuffle(beers)\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: this.state.title,\n        currentScore: this.state.currentScore,\n        highScore: this.state.highScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), this.state.beers.map(beer => /*#__PURE__*/_jsxDEV(BeerCard, {\n        clickedBeer: this.clickedBeer,\n        id: beer.id,\n        name: beer.name,\n        image: beer.image,\n        style: beer.style,\n        notes: beer.notes\n      }, beer.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dusting27/Desktop/react-game/src/App.js"],"names":["React","Component","BeerCard","Wrapper","Header","beers","shuffle","array","i","length","j","Math","floor","random","App","state","title","currentScore","highScore","clickedBeer","id","indexOf","push","console","log","handleIncrement","setState","score","topScore","newScore","shuffleArray","render","map","beer","name","image","style","notes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport BeerCard from \"./components/BeerCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport beers from \"./beers.json\";\n\n// function to shuffle and return array\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nclass App extends Component {\n  // Setting state to beers.json and other global variables\n  state = {\n    beers,\n    title: \"Click any beer you'd like!\",\n    currentScore: 0,\n    highScore: 0,\n    clickedBeer: []\n  };\n\n  // assigning the states for later updating\n  clickedBeer = id => {\n    // tests if click function is connected\n    // console.log(id)\n    // setting open variables for manipulation\n    let clickedBeer = this.state.clickedBeer;\n    let currentScore = this.state.currentScore;\n    let highScore = this.state.highScore;\n  \n    // if statement will push id's into an array then check for multiples\n    // the array then resets\n    if (clickedBeer.indexOf(id) === -1) {\n      // pushes selected id's into the clickedBeer array\n      clickedBeer.push(id);\n      console.log(clickedBeer);\n      // on success add 1 to current score\n      this.handleIncrement();\n      // this.shuffleArray();\n      // testing the greater than sign. the score doesn't reset with === 15\n    } else if (this.state.currentScore === 14) {\n      this.setState({\n        currentScore: 0,\n        highScore: this.state.highScore + 1,\n        clickedBeer: []\n      });\n    } else {\n      this.setState({\n        score: 0,\n        clickedBeer: []\n      });\n\n      if (currentScore > highScore) {\n        this.setState({\n          topScore: currentScore\n        });\n      }\n    };\n\n  };\n\n   // increases the state.score to +1\n   handleIncrement = () => {\n     const newScore = this.setState({ currentScore: this.state.currentScore +1});\n     \n    // this.setState({\n    //   currentScore: newScore,\n    //   title: \"Keep on clickin'!\"\n    // })\n  };\n\n  //shuffle the list on each click\n  shuffleArray = () => {\n    this.setState({ beers: shuffle(beers) });\n  };\n\n\n  render() {\n    return (\n      <Wrapper>\n        <Header\n        title={this.state.title}\n        currentScore={this.state.currentScore}\n        highScore={this.state.highScore}\n        />\n        {this.state.beers.map(beer => (\n          <BeerCard\n            clickedBeer={this.clickedBeer}\n            id={beer.id}\n            key={beer.id}\n            name={beer.name}\n            image={beer.image}\n            style={beer.style}\n            notes={beer.notes}\n          />\n        ))}\n      </Wrapper>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}