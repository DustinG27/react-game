{"ast":null,"code":"var _jsxFileName = \"/Users/dusting27/Desktop/react-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport BeerCard from \"./components/BeerCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport beers from \"./beers.json\"; // function to shuffle and return array\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array;\n}\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      beers,\n      currentScore: 0,\n      highScore: 0,\n      clickedBeer: []\n    };\n\n    this.clickedBeers = id => {\n      let clickedbeer = this.state.clickedbeer;\n      let score = this.state.score;\n      let highScore = this.state.highScore;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), this.state.beers.map(beer => /*#__PURE__*/_jsxDEV(BeerCard, {\n        clickedBeer: this.clickedBeer,\n        id: beer.id,\n        name: beer.name,\n        image: beer.image,\n        style: beer.style,\n        notes: beer.notes\n      }, beer.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dusting27/Desktop/react-game/src/App.js"],"names":["React","Component","BeerCard","Wrapper","Header","beers","shuffle","array","i","length","j","Math","floor","random","App","state","currentScore","highScore","clickedBeer","clickedBeers","id","clickedbeer","score","render","map","beer","name","image","style","notes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB,C,CAEA;;;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,OAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAA5B,EAA+BD,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvC,UAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,KAACD,KAAK,CAACC,CAAD,CAAN,EAAWD,KAAK,CAACG,CAAD,CAAhB,IAAuB,CAACH,KAAK,CAACG,CAAD,CAAN,EAAWH,KAAK,CAACC,CAAD,CAAhB,CAAvB;AACH;;AACD,SAAOD,KAAP;AACD;;AAGD,MAAMO,GAAN,SAAkBb,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1Bc,KAF0B,GAElB;AACNV,MAAAA,KADM;AAENW,MAAAA,YAAY,EAAE,CAFR;AAGNC,MAAAA,SAAS,EAAE,CAHL;AAINC,MAAAA,WAAW,EAAE;AAJP,KAFkB;;AAAA,SAW1BC,YAX0B,GAWXC,EAAE,IAAI;AACnB,UAAIC,WAAW,GAAG,KAAKN,KAAL,CAAWM,WAA7B;AACA,UAAIC,KAAK,GAAG,KAAKP,KAAL,CAAWO,KAAvB;AACA,UAAIL,SAAS,GAAG,KAAKF,KAAL,CAAWE,SAA3B;AACD,KAfyB;AAAA;;AAiB1BM,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,OAAD;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKR,KAAL,CAAWV,KAAX,CAAiBmB,GAAjB,CAAqBC,IAAI,iBACxB,QAAC,QAAD;AACE,QAAA,WAAW,EAAE,KAAKP,WADpB;AAEE,QAAA,EAAE,EAAEO,IAAI,CAACL,EAFX;AAIE,QAAA,IAAI,EAAEK,IAAI,CAACC,IAJb;AAKE,QAAA,KAAK,EAAED,IAAI,CAACE,KALd;AAME,QAAA,KAAK,EAAEF,IAAI,CAACG,KANd;AAOE,QAAA,KAAK,EAAEH,IAAI,CAACI;AAPd,SAGOJ,IAAI,CAACL,EAHZ;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAlCyB;;AAqC5B,eAAeN,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport BeerCard from \"./components/BeerCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport beers from \"./beers.json\";\n\n// function to shuffle and return array\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\n\nclass App extends Component {\n  // Setting state to beers.json and other global variables\n  state = {\n    beers,\n    currentScore: 0,\n    highScore: 0,\n    clickedBeer: []\n  };\n\n  \n\n  clickedBeers = id => {\n    let clickedbeer = this.state.clickedbeer;\n    let score = this.state.score;\n    let highScore = this.state.highScore;\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Header></Header>\n        {this.state.beers.map(beer => (\n          <BeerCard\n            clickedBeer={this.clickedBeer}\n            id={beer.id}\n            key={beer.id}\n            name={beer.name}\n            image={beer.image}\n            style={beer.style}\n            notes={beer.notes}\n          />\n        ))}\n      </Wrapper>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}